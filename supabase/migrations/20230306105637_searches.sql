create table "public"."searches" (
    "id" bigint generated by default as identity not null,
    "words" text,
    "jobType" character varying,
    "workType" character varying,
    "website" character varying,
    "location" character varying,
    "active" boolean not null default true,
    "created_at" timestamp with time zone default now(),
    "user_id" uuid not null
);


alter table "public"."searches" enable row level security;

CREATE UNIQUE INDEX searches_pkey ON public.searches USING btree (id);

alter table "public"."searches" add constraint "searches_pkey" PRIMARY KEY using index "searches_pkey";

alter table "public"."searches" add constraint "searches_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."searches" validate constraint "searches_user_id_fkey";

create policy "users can manage their searches"
on "public"."searches"
as permissive
for all
to public
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));



